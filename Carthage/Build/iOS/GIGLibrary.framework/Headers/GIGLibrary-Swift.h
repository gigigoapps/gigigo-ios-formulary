// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import CoreData;
@import UIKit;
#endif

#import <GIGLibrary/GIGLibrary.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_CLASS("_TtC10GIGLibrary15AlertController")
@interface AlertController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)addDefaultButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addCancelButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addDestructiveButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
@end


SWIFT_CLASS("_TtC10GIGLibrary11ActionSheet")
@interface ActionSheet : AlertController
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GIGLibrary5Alert")
@interface Alert : NSObject
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)addDefaultButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addCancelButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addDestructiveButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
@end



@interface NSDate (SWIFT_EXTENSION(GIGLibrary))

/// Date from string with ISO format.
+ (NSDate * _Nullable)dateFromString:(NSString * _Nonnull)dateString format:(NSString * _Nonnull)format;
+ (NSDate * _Nonnull)today;

/// Set the time to a NSDate\Important 
///
/// The time is set in local time respecting the user time zone.
/// Examples (in Spain):
///
/// <ul><li>setHour(14) to a summer date (UTC+2) returns -> 12:00:00 +0000</li><li>setHour(14) to a winter date (UTC+1) returns -> 13:00:00 +0000</li></ul>\Author 
/// Alejandro Jim√©nez\Since 
///
/// 1.1.3
///
/// \param hour The hour to be set
///
/// \param minutes The minutes to be set. Optional, 0 by default
///
/// \param seconds The seconds to be set. Optional, 0 by default
///
/// \param error An error of type ErrorDate
///
/// \returns  A new NSDate with the same date and the time set.
- (NSDate * _Nullable)setHour:(NSInteger)hour minutes:(NSInteger)minutes seconds:(NSInteger)seconds error:(NSError * _Nullable * _Null_unspecified)error;
@end


@interface NSLocale (SWIFT_EXTENSION(GIGLibrary))

/// Returns language + region. Example: en-US
+ (NSString * _Nonnull)currentLanguage;

/// Returns only language. Expample: es
+ (NSString * _Nonnull)currentLanguageCode;

/// Returns only region. Example: US
+ (NSString * _Nonnull)currentRegionCode;
@end

@class NSManagedObject;

@interface NSManagedObjectContext (SWIFT_EXTENSION(GIGLibrary))
- (NSManagedObject * _Nullable)createEntity:(NSString * _Nonnull)name;
- (NSManagedObject * _Nullable)fetchFirst:(NSString * _Nonnull)entityName predicateString:(NSString * _Nonnull)predicateString;
- (NSArray<NSManagedObject *> * _Nullable)fetchList:(NSString * _Nonnull)entityName predicateString:(NSString * _Nonnull)predicateString;
@end


SWIFT_CLASS("_TtC10GIGLibrary7Request")
@interface Request : GIGURLCommunicator
@property (nonatomic, copy) NSString * _Nonnull method;
@property (nonatomic, copy) NSString * _Nonnull endpoint;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable urlParams;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable bodyParams;
@property (nonatomic) BOOL verbose;
- (nonnull instancetype)initWithMethod:(NSString * _Nonnull)method baseUrl:(NSString * _Nonnull)baseUrl endpoint:(NSString * _Nonnull)endpoint headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers urlParams:(NSDictionary<NSString *, id> * _Nullable)urlParams bodyParams:(NSDictionary<NSString *, id> * _Nullable)bodyParams verbose:(BOOL)verbose OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIStoryboard (SWIFT_EXTENSION(GIGLibrary))
@end


@interface UIView (SWIFT_EXTENSION(GIGLibrary))
- (void)addSubviewWithAutolayout:(UIView * _Nonnull)childView;
@end

#pragma clang diagnostic pop
