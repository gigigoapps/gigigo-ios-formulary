// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import CoreData;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_CLASS("_TtC10GIGLibrary15AlertController")
@interface AlertController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)addDefaultButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addCancelButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addDestructiveButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
@end


SWIFT_CLASS("_TtC10GIGLibrary11ActionSheet")
@interface ActionSheet : AlertController
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10GIGLibrary5Alert")
@interface Alert : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)addDefaultButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addCancelButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
- (void)addDestructiveButton:(NSString * _Nonnull)title usingAction:(void (^ _Nullable)(NSString * _Nonnull))usingAction;
@end


@protocol UICollectionViewDataSource;
@protocol UICollectionViewDelegate;
@class NSCoder;
@class UICollectionViewLayout;

/// UICollectionView with infinite paginated scroll
SWIFT_CLASS("_TtC10GIGLibrary22InfiniteCollectionView")
@interface InfiniteCollectionView : UICollectionView
@property (nonatomic, strong) id <UICollectionViewDataSource> _Nullable dataSource;
@property (nonatomic, strong) id <UICollectionViewDelegate> _Nullable delegate;
@property (nonatomic, readonly) BOOL isMovingForward;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)displayNext;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout SWIFT_UNAVAILABLE;
@end


@interface InfiniteCollectionView (SWIFT_EXTENSION(GIGLibrary)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UICollectionViewCell;

@interface InfiniteCollectionView (SWIFT_EXTENSION(GIGLibrary)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIScrollView;

@interface InfiniteCollectionView (SWIFT_EXTENSION(GIGLibrary)) <UIScrollViewDelegate>
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end

@class UIFont;
@class UIColor;

@interface NSAttributedString (SWIFT_EXTENSION(GIGLibrary))
- (nullable instancetype)initFromHTML:(NSString * _Nonnull)html;
- (nullable instancetype)initFromHTML:(NSString * _Nonnull)html font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color aligment:(NSTextAlignment)aligment;
@end

@class NSManagedObject;

@interface NSManagedObjectContext (SWIFT_EXTENSION(GIGLibrary))
- (NSManagedObject * _Nullable)createEntity:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (NSManagedObject * _Nullable)fetchFirst:(NSString * _Nonnull)entityName predicateString:(NSString * _Nonnull)predicateString SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSManagedObject *> * _Nullable)fetchList:(NSString * _Nonnull)entityName predicateString:(NSString * _Nonnull)predicateString SWIFT_WARN_UNUSED_RESULT;
@end


/// Use it to create a ProgressView with the possibility to animate with a especific animation duration
/// since:
/// 2.3.0
SWIFT_CLASS("_TtC10GIGLibrary20ProgressDurationView")
@interface ProgressDurationView : UIProgressView
/// Adjusts the current progress shown by the receiver.
/// since:
/// 2.3
/// \param progress The current progress shown by the receiver.
///
/// \param duration Duration of animation.
///
/// \param fromZero Defines if we want the animaton duration from zero point or from the current position. Default is true
///
- (void)animateTo:(float)progress withDuration:(NSTimeInterval)duration fromZero:(BOOL)fromZero;
/// Method to pause the current animation.
/// since:
/// 2.3
- (void)pause;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// Use it to create a page control with a ProgressDurationView in the current page.
/// <ul>
///   <li>
///     Since 2.3.0
///   </li>
/// </ul>
SWIFT_CLASS("_TtC10GIGLibrary19ProgressPageControl")
@interface ProgressPageControl : UIView
/// To set the current page
/// since:
/// 2.3
@property (nonatomic) NSInteger currentPage;
/// The number of pages of the page control
/// since:
/// 2.3
@property (nonatomic) NSInteger numberOfPages;
/// The color of pages
/// since:
/// 2.3
@property (nonatomic, strong) UIColor * _Nonnull pageColor;
/// The color of selected page progress view
/// since:
/// 2.3
@property (nonatomic, strong) UIColor * _Nonnull selectedColor;
/// Static method to create an instance of a ProgressPageControl.
/// since:
/// 2.3
/// \param numberOfPages The number of pages
///
/// \param pageColor The color of pages
///
/// \param selectedColor The selected page color
///
///
/// returns:
/// A ProgressPageControl object
+ (ProgressPageControl * _Nonnull)pageControlWithPages:(NSInteger)numberOfPages color:(UIColor * _Nonnull)pageColor selectedColor:(UIColor * _Nonnull)selectedColor SWIFT_WARN_UNUSED_RESULT;
/// Method to start the current page animation.
/// since:
/// 2.3
/// \param duration The duration of the animation
///
/// \param to The progress value (between 0.0 & 1.0). Default is 1.0
///
/// \param fromZero Defines if we want the animaton duration from zero point or from the current position. Default is true
///
- (void)startCurrentPageWithDuration:(NSTimeInterval)duration to:(float)to fromZero:(BOOL)fromZero;
/// Method to pause the current page animation.
/// since:
/// 2.3
- (void)pauseCurrentPage;
- (void)prepareForInterfaceBuilder;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(GIGLibrary))
- (NSString * _Nonnull)hexString:(BOOL)includeAlpha SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(GIGLibrary))
+ (UIImage * _Nullable)gifWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)gifWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)gifWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImageView (SWIFT_EXTENSION(GIGLibrary))
- (void)imageFromURLWithUrlString:(NSString * _Nonnull)urlString placeholder:(UIImage * _Nullable)placeholder;
- (void)loadGifWithName:(NSString * _Nonnull)name;
- (void)loadGifWithUrlString:(NSString * _Nonnull)urlString;
@end


@interface UILabel (SWIFT_EXTENSION(GIGLibrary))
/// Set a HTML String to a Label
/// \code
/// label.html = "<b>Important</b> text"
///
/// \endcode
@property (nonatomic, copy) NSString * _Nullable html;
@end


@interface UIStoryboard (SWIFT_EXTENSION(GIGLibrary))
@end


@interface UITextView (SWIFT_EXTENSION(GIGLibrary))
/// Set a HTML String to a UITextView
/// \code
/// textView.html = "<b>Important</b> text"
///
/// \endcode
@property (nonatomic, copy) NSString * _Nullable html;
@end


@interface UIView (SWIFT_EXTENSION(GIGLibrary))
- (void)addSubviewWithAutolayout:(UIView * _Nonnull)childView;
@end

#pragma clang diagnostic pop
